diff --git a/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Aside.tsx b/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Aside.tsx
index 72ae8d4..f74d3fb 100644
--- a/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Aside.tsx
+++ b/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Aside.tsx
@@ -1,15 +1,15 @@
-import React, { useState, useRef, useEffect, ReactNode } from "react";
-import styled from "@emotion/styled";
-import throttle from "lodash/throttle";
+import React, { useState, useRef, useEffect, ReactNode } from 'react'
+import styled from '@emotion/styled'
+import throttle from 'lodash/throttle'
 
-import HandleOverlap from "./Article.HandleOverlap";
+import HandleOverlap from './Article.HandleOverlap'
 
-import mediaqueries from "@styles/media";
-import { clamp } from "@utils";
+import mediaqueries from '@styles/media'
+import { clamp } from '@utils'
 
 interface AsideProps {
-  children: ReactNode[] | ReactNode;
-  contentHeight: number;
+  children: ReactNode[] | ReactNode
+  contentHeight: number
 }
 
 /**
@@ -28,70 +28,61 @@ interface AsideProps {
  *
  */
 function Aside({ contentHeight, children }: AsideProps) {
-  const progressRef = useRef<HTMLDivElement>(null);
+  const progressRef = useRef<HTMLDivElement>(null)
 
-  const [progress, setProgress] = useState<number>(0);
-  const [imageOffset, setImageOffset] = useState<number>(0);
-  const [shouldFixAside, setShouldFixAside] = useState<boolean>(false);
+  const [progress, setProgress] = useState<number>(0)
+  const [imageOffset, setImageOffset] = useState<number>(0)
+  const [shouldFixAside, setShouldFixAside] = useState<boolean>(false)
 
-  const show = imageOffset && progress < 100;
-  const childrenWithProps = React.Children.map(children, child =>
-    React.cloneElement(child, { show }),
-  );
+  const show = imageOffset && progress < 100
+  const childrenWithProps = React.Children.map(children, (child) => React.cloneElement(child, { show }))
 
   useEffect(() => {
-    const imageRect = document
-      .getElementById("ArticleImage__Hero")
-      .getBoundingClientRect();
-
-    const imageOffsetFromTopOfWindow = imageRect.top + window.scrollY;
-    setImageOffset(imageOffsetFromTopOfWindow);
+    const imageRect = document.getElementById('ArticleImage__Hero')
+    const imageOffset = imageRect ? imageRect.getBoundingClientRect().top : 0
+    const imageOffsetFromTopOfWindow = imageOffset + window.scrollY
+    setImageOffset(imageOffsetFromTopOfWindow)
 
     const handleScroll = (event: Event) => {
-      const el = progressRef.current;
-      const top = el.getBoundingClientRect().top;
-      const height = el.offsetHeight;
-      const windowHeight =
-        window.innerHeight || document.documentElement.clientHeight;
+      const el = progressRef.current
+      const top = el.getBoundingClientRect().top
+      const height = el.offsetHeight
+      const windowHeight = window.innerHeight || document.documentElement.clientHeight
 
-      const percentComplete = (window.scrollY / contentHeight) * 100;
+      const percentComplete = (window.scrollY / contentHeight) * 100
 
-      setProgress(clamp(+percentComplete.toFixed(2), 0, 105));
+      setProgress(clamp(+percentComplete.toFixed(2), 0, 105))
 
       if (top + window.scrollY < imageOffsetFromTopOfWindow) {
-        return setShouldFixAside(false);
+        return setShouldFixAside(false)
       }
 
       if (top + height / 2 <= windowHeight / 2) {
-        return setShouldFixAside(true);
+        return setShouldFixAside(true)
       }
-    };
+    }
 
-    window.addEventListener("scroll", handleScroll);
-    window.addEventListener("resize", handleScroll);
+    window.addEventListener('scroll', handleScroll)
+    window.addEventListener('resize', handleScroll)
 
     return () => {
-      window.removeEventListener("scroll", handleScroll);
-      window.removeEventListener("resize", handleScroll);
-    };
-  }, [contentHeight]);
+      window.removeEventListener('scroll', handleScroll)
+      window.removeEventListener('resize', handleScroll)
+    }
+  }, [contentHeight])
 
   return (
     <AsideContainer>
-      <Align
-        show={show}
-        imageOffset={imageOffset}
-        shouldFixAside={shouldFixAside}
-      >
+      <Align show={show} imageOffset={imageOffset} shouldFixAside={shouldFixAside}>
         <div ref={progressRef}>
           <HandleOverlap>{childrenWithProps}</HandleOverlap>
         </div>
       </Align>
     </AsideContainer>
-  );
+  )
 }
 
-export default Aside;
+export default Aside
 
 const AsideContainer = styled.aside`
   display: flex;
@@ -101,25 +92,23 @@ const AsideContainer = styled.aside`
   ${mediaqueries.desktop_medium`
     display: none;
   `}
-`;
+`
 
 const Align = React.memo(styled.div<{
-  show: boolean;
-  shouldFixAside: boolean;
-  imageOffset: number;
+  show: boolean
+  shouldFixAside: boolean
+  imageOffset: number
 }>`
-  position: ${p => (p.shouldFixAside ? "fixed" : "absolute")};
+  position: ${(p) => (p.shouldFixAside ? 'fixed' : 'absolute')};
   display: flex;
   transform: translateY(0px);
-  top: ${p => (p.shouldFixAside ? 0 : p.imageOffset)}px;
-  align-items: ${p => (p.shouldFixAside ? "center" : "flex-start")};
+  top: ${(p) => (p.shouldFixAside ? 0 : p.imageOffset)}px;
+  align-items: ${(p) => (p.shouldFixAside ? 'center' : 'flex-start')};
   height: 100vh;
   z-index: 3;
 
-  opacity: ${p => (p.show ? 1 : 0)};
-  visibility: ${p => (p.show ? "visible" : "hidden")};
-  transition: ${p =>
-    p.show
-      ? "opacity 0.4s linear, visibility 0.4s linear"
-      : "opacity 0.2s linear, visibility 0.4s linear"};
-`);
+  opacity: ${(p) => (p.show ? 1 : 0)};
+  visibility: ${(p) => (p.show ? 'visible' : 'hidden')};
+  transition: ${(p) =>
+    p.show ? 'opacity 0.4s linear, visibility 0.4s linear' : 'opacity 0.2s linear, visibility 0.4s linear'};
+`)
diff --git a/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Hero.tsx b/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Hero.tsx
index bd67130..91c9e78 100644
--- a/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Hero.tsx
+++ b/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Hero.tsx
@@ -1,20 +1,14 @@
-import React from "react";
-import styled from "@emotion/styled";
+import React from 'react'
+import styled from '@emotion/styled'
 
-import Heading from "@components/Heading";
-import Media from "@components/Media/Media.Img";
+import Heading from '@components/Heading'
+import Media from '@components/Media/Media.Img'
 
-import mediaqueries from "@styles/media";
+import mediaqueries from '@styles/media'
 
-import { IArticleNode, IAuthor } from "@typings";
+import { IArticleNode, IAuthor } from '@typings'
 
-const ArticleHero = ({
-  article,
-  author,
-}: {
-  article: IArticleNode;
-  author: IAuthor;
-}) => {
+const ArticleHero = ({ article, author }: { article: IArticleNode; author: IAuthor }) => {
   return (
     <Hero>
       <Header>
@@ -24,22 +18,23 @@ const ArticleHero = ({
             <Media src={author.avatar.image.fluid} />
           </HeroAvatar>
           <strong>{author.name}</strong>
-          <HideOnMobile>,&nbsp;</HideOnMobile> {article.date} ·{" "}
-          {article.timeToRead} min read
+          <HideOnMobile>,&nbsp;</HideOnMobile> {article.date} · {article.timeToRead} min read
         </HeroSubtitle>
       </Header>
-      <Image id="ArticleImage__Hero">
-        <Media src={article.hero.full.fluid} />
-      </Image>
+      {article.hero && (
+        <Image id="ArticleImage__Hero">
+          <Media src={article.hero.full.fluid} />
+        </Image>
+      )}
     </Hero>
-  );
-};
+  )
+}
 
-export default ArticleHero;
+export default ArticleHero
 
 const Hero = styled.div`
   position: relative;
-`;
+`
 
 const HeroAvatar = styled.div`
   height: 25px;
@@ -52,7 +47,7 @@ const HeroAvatar = styled.div`
   ${mediaqueries.phablet`
     display: none;
   `}
-`;
+`
 
 const Header = styled.header`
   margin: 100px auto 120px;
@@ -73,11 +68,11 @@ const Header = styled.header`
   @media screen and (max-height: 700px) {
     margin: 100px auto;
   }
-`;
+`
 
 const HeroHeading = styled(Heading.h1)`
   font-size: 48px;
-  font-family: ${p => p.theme.fonts.serif};
+  font-family: ${(p) => p.theme.fonts.serif};
   margin-bottom: 25px;
   font-weight: bold;
   line-height: 1.32;
@@ -90,12 +85,12 @@ const HeroHeading = styled(Heading.h1)`
   ${mediaqueries.phablet`
     font-size: 32px;
   `}
-`;
+`
 
 const HeroSubtitle = styled.div`
   display: flex;
   font-size: 18px;
-  color: ${p => p.theme.colors.grey};
+  color: ${(p) => p.theme.colors.grey};
 
   ${mediaqueries.phablet`
     font-size: 14px;
@@ -107,13 +102,13 @@ const HeroSubtitle = styled.div`
       margin-bottom: 5px;
     }
   `}
-`;
+`
 
 const HideOnMobile = styled.span`
   ${mediaqueries.phablet`
     display: none;
   `}
-`;
+`
 const Image = styled.div`
   position: relative;
   z-index: 1;
@@ -121,8 +116,7 @@ const Image = styled.div`
   max-height: 424px;
   max-width: 944px;
   margin: 0 auto;
-  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, 0.2),
-    0 18px 36px -18px rgba(0, 0, 0, 0.22);
+  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, 0.2), 0 18px 36px -18px rgba(0, 0, 0, 0.22);
 
   ${mediaqueries.tablet`
     max-width: 100%;
@@ -137,4 +131,4 @@ const Image = styled.div`
       height: 220px;
     }
 `}
-`;
+`
diff --git a/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Next.tsx b/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Next.tsx
index 745df19..8e2bdf3 100644
--- a/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Next.tsx
+++ b/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.Next.tsx
@@ -1,14 +1,14 @@
-import React from "react";
-import styled from "@emotion/styled";
-import { css } from "@emotion/core";
-import { Link } from "gatsby";
+import React from 'react'
+import styled from '@emotion/styled'
+import { css } from '@emotion/core'
+import { Link } from 'gatsby'
 
-import Heading from "@components/Heading";
-import Media from "@components/Media/Media.Img";
+import Heading from '@components/Heading'
+import Media from '@components/Media/Media.Img'
 
-import mediaqueries from "@styles/media";
+import mediaqueries from '@styles/media'
 
-import { IArticleNode } from "@typings";
+import { IArticleNode } from '@typings'
 
 /**
  * Sits at the bottom of our Article page. Shows the next 2 on desktop and the
@@ -23,57 +23,45 @@ import { IArticleNode } from "@typings";
  *  [..............], [.........]
  */
 const ArticlesNext = ({ articles }: { articles: IArticleNode[] }) => {
-  if (!articles) return null;
-  const numberOfArticles = articles.length;
+  if (!articles) return null
+  const numberOfArticles = articles.length
   return (
     <Grid numberOfArticles={numberOfArticles}>
       <GridItem article={articles[0]} />
       <GridItem article={articles[1]} narrow />
     </Grid>
-  );
-};
-
-export default ArticlesNext;
-
-const GridItem = ({
-  article,
-  narrow,
-}: {
-  article: IArticleNode;
-  narrow?: boolean;
-}) => {
-  if (!article) return null;
-  article = article.node;
-  const hasOverflow = narrow && article.title.length > 35;
+  )
+}
+
+export default ArticlesNext
+
+const GridItem = ({ article, narrow }: { article: IArticleNode; narrow?: boolean }) => {
+  if (!article) return null
+  article = article.node
+  const hasOverflow = narrow && article.title.length > 35
 
   return (
-    <ArticleLink
-      to={article.slug}
-      data-a11y="false"
-      narrow={narrow ? "true" : "false"}
-    >
+    <ArticleLink to={article.slug} data-a11y="false" narrow={narrow ? 'true' : 'false'}>
       <Item>
-        <Image>
-          <Media
-            src={
-              narrow ? article.hero.narrow.fluid : article.hero.regular.fluid
-            }
-          />
-        </Image>
+        {article.hero && (
+          <Image>
+            <Media src={narrow ? article.hero.narrow.fluid : article.hero.regular.fluid} />
+          </Image>
+        )}
         <Title dark hasOverflow={hasOverflow}>
           {article.title}
         </Title>
         <Excerpt hasOverflow={hasOverflow}>{article.excerpt}</Excerpt>
         <MetaData>
           {article.date} · {article.timeToRead} min read
-        </MetaData>{" "}
+        </MetaData>{' '}
       </Item>
     </ArticleLink>
-  );
-};
+  )
+}
 
-const wide = "1fr";
-const narrow = "457px";
+const wide = '1fr'
+const narrow = '457px'
 
 const limitToTwoLines = css`
   text-overflow: ellipsis;
@@ -87,26 +75,26 @@ const limitToTwoLines = css`
   ${mediaqueries.phablet`
     -webkit-line-clamp: 3;
   `}
-`;
+`
 const Grid = styled.div<{ numberOfArticles: number }>`
   position: relative;
   display: grid;
-  ${p => {
+  ${(p) => {
     if (p.numberOfArticles === 1) {
       return `
       grid-template-columns: 1fr;
       grid-template-rows: 1
-    `;
+    `
     } else {
       return `
       grid-template-columns: ${wide} ${narrow};
       grid-template-rows: 2;
-      `;
+      `
     }
   }}
   column-gap: 30px;
   margin: 0 auto;
-  max-width: ${p => (p.numberOfArticles === 1 ? "680px" : "100%")};
+  max-width: ${(p) => (p.numberOfArticles === 1 ? '680px' : '100%')};
 
   ${mediaqueries.desktop`
     grid-template-columns: 1fr 1fr;
@@ -115,16 +103,15 @@ const Grid = styled.div<{ numberOfArticles: number }>`
   ${mediaqueries.tablet`
     grid-template-columns: 1fr;
   `}
-`;
+`
 
 const Image = styled.div`
   position: relative;
   height: 280px;
-  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),
-    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});
+  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${(p) => (p.narrow ? 0.22 : 0.3)}),
+    0 18px 36px -18px rgba(0, 0, 0, ${(p) => (p.narrow ? 0.25 : 0.33)});
   margin-bottom: 30px;
-  transition: transform 0.3s var(--ease-out-quad),
-    box-shadow 0.3s var(--ease-out-quad);
+  transition: transform 0.3s var(--ease-out-quad), box-shadow 0.3s var(--ease-out-quad);
 
   & > div {
     height: 100%;
@@ -143,7 +130,7 @@ const Image = styled.div`
     border-top-right-radius: 5px;
     border-top-left-radius: 5px;
   `}
-`;
+`
 
 const Item = styled.div`
   position: relative;
@@ -152,16 +139,16 @@ const Item = styled.div`
     box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);
     border-bottom-right-radius: 5px;
     border-bottom-left-radius: 5px;
-    background: ${p => p.theme.colors.card};
+    background: ${(p) => p.theme.colors.card};
   }
-`;
+`
 
 const Title = styled(Heading.h3)`
   font-size: 22px;
   line-height: 1.4;
-  margin-bottom: ${p => (p.hasOverflow ? "45px" : "10px")};
-  color: ${p => p.theme.colors.primary};
-  font-family: ${p => p.theme.fonts.serif};
+  margin-bottom: ${(p) => (p.hasOverflow ? '45px' : '10px')};
+  color: ${(p) => p.theme.colors.primary};
+  font-family: ${(p) => p.theme.fonts.serif};
   transition: color 0.3s ease-in-out;
   ${limitToTwoLines};
 
@@ -173,15 +160,15 @@ const Title = styled(Heading.h3)`
     margin-bottom: 10px;
     -webkit-line-clamp: 3;
   `}
-`;
+`
 
 const Excerpt = styled.p<{ narrow: boolean; hasOverflow: boolean }>`
   ${limitToTwoLines};
   font-size: 16px;
   margin-bottom: 10px;
-  color: ${p => p.theme.colors.grey};
-  display: ${p => (p.hasOverflow ? "none" : "box")};
-  max-width: ${p => (p.narrow ? "415px" : "515px")};
+  color: ${(p) => p.theme.colors.grey};
+  display: ${(p) => (p.hasOverflow ? 'none' : 'box')};
+  max-width: ${(p) => (p.narrow ? '415px' : '515px')};
 
   ${mediaqueries.desktop`
     display: -webkit-box;
@@ -197,19 +184,19 @@ const Excerpt = styled.p<{ narrow: boolean; hasOverflow: boolean }>`
     margin-bottom: 20px;
     -webkit-line-clamp: 3;
   `}
-`;
+`
 
 const MetaData = styled.div`
   font-weight: 600;
   font-size: 16px;
-  color: ${p => p.theme.colors.grey};
+  color: ${(p) => p.theme.colors.grey};
   opacity: 0.33;
 
   ${mediaqueries.phablet`
     max-width: 100%;
     padding:  0 20px 30px;
   `}
-`;
+`
 
 const ArticleLink = styled(Link)<{ narrow: string }>`
   position: relative;
@@ -224,27 +211,26 @@ const ArticleLink = styled(Link)<{ narrow: string }>`
 
   &:hover ${Image} {
     transform: translateY(-1px);
-    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27),
-      0 30px 50px -30px rgba(0, 0, 0, 0.3);
+    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3);
   }
 
   &:hover h2,
   &:focus h2 {
-    color: ${p => p.theme.colors.accent};
+    color: ${(p) => p.theme.colors.accent};
   }
 
-  &[data-a11y="true"]:focus::after {
-    content: "";
+  &[data-a11y='true']:focus::after {
+    content: '';
     position: absolute;
     left: -2%;
     top: -2%;
     width: 104%;
     height: 104%;
-    border: 3px solid ${p => p.theme.colors.accent};
+    border: 3px solid ${(p) => p.theme.colors.accent};
     background: rgba(255, 255, 255, 0.01);
   }
 
-  ${p => p.narrow === "true" && mediaqueries.tablet`display: none;`}
+  ${(p) => p.narrow === 'true' && mediaqueries.tablet`display: none;`}
 
   ${mediaqueries.phablet`
     &:hover ${Image} {
@@ -256,4 +242,4 @@ const ArticleLink = styled(Link)<{ narrow: string }>`
       transform: scale(0.97) translateY(3px);
     }
   `}
-`;
+`
diff --git a/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.SEO.tsx b/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.SEO.tsx
index 650f907..0a0eda3 100644
--- a/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.SEO.tsx
+++ b/node_modules/@narative/gatsby-theme-novela/src/sections/article/Article.SEO.tsx
@@ -1,18 +1,10 @@
-import React from "react";
+import React from 'react'
 
-import SEO from "@components/SEO";
+import SEO from '@components/SEO'
 
-import { IArticleNode, IAuthorNode } from "@typings";
+import { IArticleNode, IAuthorNode } from '@typings'
 
-function ArticleSEO({
-  article,
-  author,
-  location,
-}: {
-  article: IArticleNode;
-  author: IAuthorNode;
-  location: any;
-}) {
+function ArticleSEO({ article, author, location }: { article: IArticleNode; author: IAuthorNode; location: any }) {
   const microdata = `{
     "@context": "https://schema.org",
     "@type": "Article",
@@ -21,7 +13,7 @@ function ArticleSEO({
       "@id": "${location.href}"
     },
     "headline": "${article.title}",
-    "image": "${article.hero.seo.fixed.src}",
+    ${article.hero ? `"image": "${article.hero.seo.fixed.src}",` : ''}
     "datePublished": "${article.dateForSEO}",
     "author": {
       "@type": "Person",
@@ -29,20 +21,20 @@ function ArticleSEO({
     },
     "description": "${article.excerpt.replace(/"/g, '\\"')}"
   }
-`.replace(/\s/g, "");
+`.replace(/\s/g, '')
 
   return (
     <SEO
       title={article.title}
       description={article.excerpt}
-      image={article.hero.seo.fixed.src}
+      image={article.hero && article.hero.seo.fixed.src}
       timeToRead={article.timeToRead}
       published={article.date}
       pathname={location.href}
     >
       <script type="application/ld+json">{microdata}</script>
     </SEO>
-  );
+  )
 }
 
-export default ArticleSEO;
+export default ArticleSEO
diff --git a/node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Grid.Tiles.tsx b/node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Grid.Tiles.tsx
index 3b15878..d86f147 100644
--- a/node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Grid.Tiles.tsx
+++ b/node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Grid.Tiles.tsx
@@ -1,15 +1,15 @@
-import React from "react";
-import styled from "@emotion/styled";
-import { css } from "@emotion/core";
+import React from 'react'
+import styled from '@emotion/styled'
+import { css } from '@emotion/core'
 
-import { Link } from "gatsby";
+import { Link } from 'gatsby'
 
-import Heading from "@components/Heading";
-import Media from "@components/Media/Media.Img";
+import Heading from '@components/Heading'
+import Media from '@components/Media/Media.Img'
 
-import mediaqueries from "@styles/media";
+import mediaqueries from '@styles/media'
 
-import { IArticleNode } from "@typings";
+import { IArticleNode } from '@typings'
 
 /**
  *  [LONG], [SHORT]
@@ -24,7 +24,7 @@ import { IArticleNode } from "@typings";
  * TODO: Figure out CSS grid for reverse grid row items and inserting a quote inside.
  */
 function ArticlesGridTiles({ articles }: { articles: IArticleNode[] }) {
-  if (!articles) return null;
+  if (!articles) return null
 
   return (
     <>
@@ -54,27 +54,25 @@ function ArticlesGridTiles({ articles }: { articles: IArticleNode[] }) {
         </Grid>
       )}
     </>
-  );
+  )
 }
 
-export default ArticlesGridTiles;
+export default ArticlesGridTiles
 
 const GridItem = ({ article, narrow }) => {
-  if (!article) return null;
-  article = article.node;
+  if (!article) return null
+  article = article.node
 
-  const hasOverflow = narrow && article.title.length > 35;
+  const hasOverflow = narrow && article.title.length > 35
 
   return (
     <ArticleLink to={article.slug} data-a11y="false">
       <Item>
-        <Image narrow={narrow}>
-          <Media
-            src={
-              narrow ? article.hero.narrow.fluid : article.hero.regular.fluid
-            }
-          />
-        </Image>
+        {article.hero && (
+          <Image narrow={narrow}>
+            <Media src={narrow ? article.hero.narrow.fluid : article.hero.regular.fluid} />
+          </Image>
+        )}
         <Title dark hasOverflow={hasOverflow}>
           {article.title}
         </Title>
@@ -86,11 +84,11 @@ const GridItem = ({ article, narrow }) => {
         </MetaData>
       </Item>
     </ArticleLink>
-  );
-};
+  )
+}
 
-const wide = "1fr";
-const narrow = "457px";
+const wide = '1fr'
+const narrow = '457px'
 const limitToTwoLines = css`
   text-overflow: ellipsis;
   overflow-wrap: normal;
@@ -103,13 +101,12 @@ const limitToTwoLines = css`
   ${mediaqueries.phablet`
     -webkit-line-clamp: 3;
   `}
-`;
+`
 
 const Grid = styled.div`
   position: relative;
   display: grid;
-  grid-template-columns: ${p =>
-    p.reverse ? `${narrow} ${wide}` : `${wide} ${narrow}`};
+  grid-template-columns: ${(p) => (p.reverse ? `${narrow} ${wide}` : `${wide} ${narrow}`)};
   grid-template-rows: 2;
   column-gap: 30px;
   margin-bottom: 80px;
@@ -122,16 +119,15 @@ const Grid = styled.div`
     grid-template-columns: 1fr;
     margin-bottom: 0;
   `}
-`;
+`
 
 const Image = styled.div`
   position: relative;
   height: 280px;
-  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),
-    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});
+  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${(p) => (p.narrow ? 0.22 : 0.3)}),
+    0 18px 36px -18px rgba(0, 0, 0, ${(p) => (p.narrow ? 0.25 : 0.33)});
   margin-bottom: 30px;
-  transition: transform 0.3s var(--ease-out-quad),
-    box-shadow 0.3s var(--ease-out-quad);
+  transition: transform 0.3s var(--ease-out-quad), box-shadow 0.3s var(--ease-out-quad);
 
   & > div {
     height: 100%;
@@ -149,7 +145,7 @@ const Image = styled.div`
     border-top-right-radius: 5px;
     border-top-left-radius: 5px;
   `}
-`;
+`
 
 const Item = styled.div`
   position: relative;
@@ -159,7 +155,7 @@ const Item = styled.div`
   `}
 
   @media (max-width: 540px) {
-    background: ${p => p.theme.colors.card};
+    background: ${(p) => p.theme.colors.card};
   }
 
   ${mediaqueries.phablet`
@@ -168,12 +164,12 @@ const Item = styled.div`
     border-bottom-right-radius: 5px;
     border-bottom-left-radius: 5px;
   `}
-`;
+`
 
 const Title = styled(Heading.h2)`
   font-size: 21px;
-  font-family: ${p => p.theme.fonts.serif};
-  margin-bottom: ${p => (p.hasOverflow ? "45px" : "10px")};
+  font-family: ${(p) => p.theme.fonts.serif};
+  margin-bottom: ${(p) => (p.hasOverflow ? '45px' : '10px')};
   transition: color 0.3s ease-in-out;
   ${limitToTwoLines};
 
@@ -188,15 +184,15 @@ const Title = styled(Heading.h2)`
     margin-bottom: 10px;
     -webkit-line-clamp: 3;
   `}
-`;
+`
 
 const Excerpt = styled.p`
   ${limitToTwoLines};
   font-size: 16px;
   margin-bottom: 10px;
-  color: ${p => p.theme.colors.grey};
-  display: ${p => (p.hasOverflow ? "none" : "box")};
-  max-width: ${p => (p.narrow ? "415px" : "515px")};
+  color: ${(p) => p.theme.colors.grey};
+  display: ${(p) => (p.hasOverflow ? 'none' : 'box')};
+  max-width: ${(p) => (p.narrow ? '415px' : '515px')};
 
   ${mediaqueries.desktop`
     display: -webkit-box;
@@ -212,19 +208,19 @@ const Excerpt = styled.p`
     margin-bottom: 20px;
     -webkit-line-clamp: 3;
   `}
-`;
+`
 
 const MetaData = styled.div`
   font-weight: 600;
   font-size: 16px;
-  color: ${p => p.theme.colors.grey};
+  color: ${(p) => p.theme.colors.grey};
   opacity: 0.33;
 
   ${mediaqueries.phablet`
     max-width: 100%;
     padding:  0 20px 30px;
   `}
-`;
+`
 
 const ArticleLink = styled(Link)`
   position: relative;
@@ -240,23 +236,22 @@ const ArticleLink = styled(Link)`
 
   &:hover ${Image}, &:focus ${Image} {
     transform: translateY(-1px);
-    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27),
-      0 30px 50px -30px rgba(0, 0, 0, 0.3);
+    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3);
   }
 
   &:hover h2,
   &:focus h2 {
-    color: ${p => p.theme.colors.accent};
+    color: ${(p) => p.theme.colors.accent};
   }
 
-  &[data-a11y="true"]:focus::after {
-    content: "";
+  &[data-a11y='true']:focus::after {
+    content: '';
     position: absolute;
     left: -1.5%;
     top: -2%;
     width: 103%;
     height: 104%;
-    border: 3px solid ${p => p.theme.colors.accent};
+    border: 3px solid ${(p) => p.theme.colors.accent};
     background: rgba(255, 255, 255, 0.01);
     border-radius: 5px;
   }
@@ -271,4 +266,4 @@ const ArticleLink = styled(Link)`
       transform: scale(0.97) translateY(3px);
     }
   `}
-`;
+`
diff --git a/node_modules/@narative/gatsby-theme-novela/src/templates/article.template.tsx b/node_modules/@narative/gatsby-theme-novela/src/templates/article.template.tsx
index 93bde34..1d1d35e 100644
--- a/node_modules/@narative/gatsby-theme-novela/src/templates/article.template.tsx
+++ b/node_modules/@narative/gatsby-theme-novela/src/templates/article.template.tsx
@@ -1,22 +1,22 @@
-import React, { useRef, useState, useEffect } from "react";
-import styled from "@emotion/styled";
-import throttle from "lodash/throttle";
-import { graphql, useStaticQuery } from "gatsby";
-
-import Layout from "@components/Layout";
-import { RichText } from "@components/Media";
-import Progress from "@components/Progress";
-import Section from "@components/Section";
-
-import mediaqueries from "@styles/media";
-import { debounce } from "@utils";
-
-import ArticleAside from "../sections/article/Article.Aside";
-import ArticleHero from "../sections/article/Article.Hero";
-import ArticleControls from "../sections/article/Article.Controls";
-import ArticlesNext from "../sections/article/Article.Next";
-import ArticleSEO from "../sections/article/Article.SEO";
-import ArticleShare from "../sections/article/Article.Share";
+import React, { useRef, useState, useEffect } from 'react'
+import styled from '@emotion/styled'
+import throttle from 'lodash/throttle'
+import { graphql, useStaticQuery } from 'gatsby'
+
+import Layout from '@components/Layout'
+import { RichText } from '@components/Media'
+import Progress from '@components/Progress'
+import Section from '@components/Section'
+
+import mediaqueries from '@styles/media'
+import { debounce } from '@utils'
+
+import ArticleAside from '../sections/article/Article.Aside'
+import ArticleHero from '../sections/article/Article.Hero'
+import ArticleControls from '../sections/article/Article.Controls'
+import ArticlesNext from '../sections/article/Article.Next'
+import ArticleSEO from '../sections/article/Article.SEO'
+import ArticleShare from '../sections/article/Article.Share'
 
 const siteQuery = graphql`
   {
@@ -30,24 +30,24 @@ const siteQuery = graphql`
       }
     }
   }
-`;
+`
 
 function Article({ pageContext, location }) {
-  const contentSectionRef = useRef<HTMLElement>(null);
+  const contentSectionRef = useRef<HTMLElement>(null)
 
-  const [hasCalculated, setHasCalculated] = useState<boolean>(false);
-  const [contentHeight, setContentHeight] = useState<number>(0);
+  const [hasCalculated, setHasCalculated] = useState<boolean>(false)
+  const [contentHeight, setContentHeight] = useState<number>(0)
 
-  const results = useStaticQuery(siteQuery);
-  const name = results.allSite.edges[0].node.siteMetadata.name;
+  const results = useStaticQuery(siteQuery)
+  const name = results.allSite.edges[0].node.siteMetadata.name
 
-  const { article, author, next } = pageContext;
+  const { article, author, next } = pageContext
 
   useEffect(() => {
     const calculateBodySize = throttle(() => {
-      const contentSection = contentSectionRef.current;
+      const contentSection = contentSectionRef.current
 
-      if (!contentSection) return;
+      if (!contentSection) return
 
       /**
        * If we haven't checked the content's height before,
@@ -55,27 +55,27 @@ function Article({ pageContext, location }) {
        * imagery to recheck when it's loaded
        */
       if (!hasCalculated) {
-        const debouncedCalculation = debounce(calculateBodySize);
-        const $imgs = contentSection.querySelectorAll("img");
+        const debouncedCalculation = debounce(calculateBodySize)
+        const $imgs = contentSection.querySelectorAll('img')
 
-        $imgs.forEach($img => {
+        $imgs.forEach(($img) => {
           // If the image hasn't finished loading then add a listener
-          if (!$img.complete) $img.onload = debouncedCalculation;
-        });
+          if (!$img.complete) $img.onload = debouncedCalculation
+        })
 
         // Prevent rerun of the listener attachment
-        setHasCalculated(true);
+        setHasCalculated(true)
       }
 
       // Set the height and offset of the content area
-      setContentHeight(contentSection.getBoundingClientRect().height);
-    }, 20);
+      setContentHeight(contentSection.getBoundingClientRect().height)
+    }, 20)
 
-    calculateBodySize();
+    calculateBodySize()
 
-    window.addEventListener("resize", calculateBodySize);
-    return () => window.removeEventListener("resize", calculateBodySize);
-  }, []);
+    window.addEventListener('resize', calculateBodySize)
+    return () => window.removeEventListener('resize', calculateBodySize)
+  }, [])
 
   return (
     <Layout>
@@ -87,7 +87,7 @@ function Article({ pageContext, location }) {
       <MobileControls>
         <ArticleControls />
       </MobileControls>
-      <ArticleBody ref={contentSectionRef}>
+      <ArticleBody hasHero={!!article.hero} ref={contentSectionRef}>
         <RichText content={article.body}>
           <ArticleShare author={author} />
         </RichText>
@@ -100,10 +100,10 @@ function Article({ pageContext, location }) {
         </NextArticle>
       )}
     </Layout>
-  );
+  )
 }
 
-export default Article;
+export default Article
 
 const MobileControls = styled.div`
   position: relative;
@@ -114,11 +114,11 @@ const MobileControls = styled.div`
   ${mediaqueries.tablet_up`
     display: none;
   `}
-`;
+`
 
 const ArticleBody = styled.article`
   position: relative;
-  padding: 160px 0 35px;
+  padding: ${(p: {hasHero: boolean}) => (p.hasHero ? '160px' : '0px')} 0 35px;
   padding-left: 68px;
   transition: background 0.2s linear;
 
@@ -129,11 +129,11 @@ const ArticleBody = styled.article`
   ${mediaqueries.phablet`
     padding: 60px 0;
   `}
-`;
+`
 
 const NextArticle = styled(Section)`
   display: block;
-`;
+`
 
 const FooterNext = styled.h3`
   position: relative;
@@ -167,8 +167,8 @@ const FooterNext = styled.h3`
       width: 90px
     `}
   }
-`;
+`
 
 const FooterSpacer = styled.div`
   margin-bottom: 65px;
-`;
+`
